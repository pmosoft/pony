<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.pmosoft.pony.dams.table.TabInfoDao">

<!--*******************************************************************************************************************
**                                             (추출) 테이블정보 추출 및 저장
********************************************************************************************************************-->

<delete id="deleteMetaTabInfo" parameterType="net.pmosoft.pony.dams.table.TabInfo">

    -- TabInfoDao.deleteMetaTabInfo
    DELETE FROM TDACM00081
</delete>

<insert id="insertMetaTabInfo" parameterType="net.pmosoft.pony.dams.table.TabInfo">

    -- TabInfoDao.insertMetaTabInfo
    INSERT INTO TDACM00081
    (
         JDBC_NM
        ,OWNER
        ,TAB_NM
        ,TAB_HNM
        ,COL_ID
        ,COL_NM
        ,COL_HNM
        ,DATA_TYPE_DESC
        ,NULLABLE
        ,PK
        ,DATA_TYPE_NM
        ,LEN
        ,DECIMAL_CNT
        ,TAB_ROWS
        ,TAB_REG_DT
        ,TAB_REG_DT2
        ,TAB_UPD_DT
        ,TAB_UPD_DT2
        ,REG_DTM
        ,REG_USR_ID
        ,UPD_DTM
        ,UPD_USR_ID
    )
    SELECT
         #{jdbcNm}                                                           AS JDBC_NM
        ,#{owner}                                                            AS OWNER
        ,#{tabNm}                                                            AS TAB_NM
        ,#{tabHnm}                                                           AS TAB_HNM
        ,#{colId}                                                            AS COL_ID
        ,#{colNm}                                                            AS COL_NM
        ,#{colHnm}                                                           AS COL_HNM
        ,#{dataTypeDesc}                                                     AS DATA_TYPE_DESC
        ,#{nullable}                                                         AS NULLABLE
        ,#{pk}                                                               AS PK
        ,#{dataTypeNm}                                                       AS DATA_TYPE_NM
        ,CASE WHEN #{len} IN ('',NULL) THEN 0 ELSE #{len} END                AS LEN
        ,CASE WHEN #{decimalCnt} IN ('',NULL) THEN 0 ELSE #{decimalCnt} END  AS DECIMAL_CNT
        ,#{tabRows}                                                          AS TAB_ROWS
        ,#{tabRegDt}                                                         AS TAB_REG_DT
        ,#{tabRegDt2}                                                        AS TAB_REG_DT2
        ,#{tabRegDt}                                                         AS TAB_UPD_DT
        ,#{tabUpdDt2}                                                        AS TAB_UPD_DT2
        ,#{regDtm}                                                           AS REG_DTM
        ,#{regUsrId}                                                         AS REG_USR_ID
        ,#{updDtm}                                                           AS UPD_DTM
        ,#{updUsrId}                                                         AS UPD_USR_ID
</insert>


<insert id="insertMetaTabInfoBulk" parameterType="net.pmosoft.pony.dams.table.TabInfo">

    -- TabInfoDao.insertMetaTabInfoBulk
    INSERT INTO TDACM00081
    (
         JDBC_NM
        ,OWNER
        ,TAB_NM
        ,TAB_HNM
        ,COL_ID
        ,COL_NM
        ,COL_HNM
        ,DATA_TYPE_DESC
        ,NULLABLE
        ,PK
        ,DATA_TYPE_NM
        ,LEN
        ,DECIMAL_CNT
        ,TAB_ROWS
        ,TAB_REG_DT
        ,TAB_REG_DT2
        ,TAB_UPD_DT
        ,TAB_UPD_DT2
        ,REG_DTM
        ,REG_USR_ID
        ,UPD_DTM
        ,UPD_USR_ID
    ) values
    <foreach item="tabInfoList" index="index" collection="list" open="" separator="," close="">
    (
         #{tabInfoList.jdbcNm}       -- JDBC_NM
        ,#{tabInfoList.owner}        -- OWNER
        ,#{tabInfoList.tabNm}        -- TAB_NM
        ,#{tabInfoList.tabHnm}       -- TAB_HNM
        ,#{tabInfoList.colId}        -- COL_ID
        ,#{tabInfoList.colNm}        -- COL_NM
        ,#{tabInfoList.colHnm}       -- COL_HNM
        ,#{tabInfoList.dataTypeDesc} -- DATA_TYPE_DESC
        ,#{tabInfoList.nullable}     -- NULLABLE
        ,#{tabInfoList.pk}           -- PK
        ,#{tabInfoList.dataTypeNm}   -- DATA_TYPE_NM
        ,#{tabInfoList.len}          -- LEN
        ,#{tabInfoList.decimalCnt}   -- DECIMAL_CNT
        ,#{tabInfoList.tabRows}      -- TAB_ROWS
        ,#{tabInfoList.tabRegDt}     -- TAB_REG_DT
        ,#{tabInfoList.tabRegDt2}    -- TAB_REG_DT2
        ,#{tabInfoList.tabRegDt}     -- TAB_UPD_DT
        ,#{tabInfoList.tabUpdDt2}    -- TAB_UPD_DT2
        ,#{tabInfoList.regDtm}       -- REG_DTM
        ,#{tabInfoList.regUsrId}     -- REG_USR_ID
        ,#{tabInfoList.updDtm}       -- UPD_DTM
        ,#{tabInfoList.updUsrId}     -- UPD_USR_ID
    )
    </foreach>

</insert>


<!--*******************************************************************************************************************
**                                             (비교)
********************************************************************************************************************-->

<select id="selectCmpTabInfoList" parameterType="net.pmosoft.pony.dams.table.TabInfo" resultType="net.pmosoft.pony.dams.table.TabInfo">

    -- TabInfoDao.selectCmpTabInfoList
    SELECT
           A.STS_NM
         , A.JDBC_NM
         , A.OWNER
         , A.TAB_NM
         , A.TAB_HNM
         , A.COL_ID
         , A.COL_NM
         , A.COL_HNM
         , A.DATA_TYPE_DESC
         , A.NULLABLE
         , A.PK
         , A.DATA_TYPE_NM
         , A.LEN
         , A.DECIMAL_CNT
         , A.TAB_ROWS
         , A.TAB_REG_DT
         , A.TAB_REG_DT2
         , A.TAB_UPD_DT
         , A.TAB_UPD_DT2
         , A.REG_DTM
         , A.REG_USR_ID
         , A.UPD_DTM
         , A.UPD_USR_ID
    FROM  (
           SELECT '신규' AS STS_NM,A.*
           FROM   TDACM00081 A
                  LEFT OUTER JOIN TDACM00080 B
                  ON   A.JDBC_NM = B.JDBC_NM
                  AND  A.OWNER = B.OWNER
                  AND  A.TAB_NM = B.TAB_NM
                  AND  A.COL_NM = B.COL_NM
           WHERE  A.JDBC_NM = UPPER(#{jdbcNm})
           AND    A.OWNER = UPPER(#{owner})
           AND    B.COL_NM IS NULL
           UNION ALL
           SELECT '삭제' AS STS_NM,A.*
           FROM   TDACM00080 A
                  LEFT OUTER JOIN TDACM00081 B
                  ON   A.JDBC_NM = B.JDBC_NM
                  AND  A.OWNER = B.OWNER
                  AND  A.TAB_NM = B.TAB_NM
                  AND  A.COL_NM = B.COL_NM
           WHERE  A.JDBC_NM = UPPER(#{jdbcNm})
           AND    A.OWNER = UPPER(#{owner})
           AND    B.COL_NM IS NULL
           UNION ALL
           SELECT '타입변경' AS STS_NM,A.*
           FROM   TDACM00081 A
                  INNER JOIN TDACM00080 B
                  ON   A.JDBC_NM = B.JDBC_NM
                  AND  A.OWNER = B.OWNER
                  AND  A.TAB_NM = B.TAB_NM
                  AND  A.COL_NM = B.COL_NM
                  AND  A.JDBC_NM = UPPER(#{jdbcNm})
                  AND  A.OWNER = UPPER(#{owner})
                  AND  B.JDBC_NM = UPPER(#{jdbcNm})
                  AND  B.OWNER = UPPER(#{owner})
           WHERE  A.DATA_TYPE_DESC != B.DATA_TYPE_DESC
           UNION ALL
           SELECT '널변경' AS STS_NM,A.*
           FROM   TDACM00081 A
                  INNER JOIN TDACM00080 B
                  ON   A.JDBC_NM = B.JDBC_NM
                  AND  A.OWNER = B.OWNER
                  AND  A.TAB_NM = B.TAB_NM
                  AND  A.COL_NM = B.COL_NM
                  AND  A.DATA_TYPE_DESC = A.DATA_TYPE_DESC
                  AND  A.JDBC_NM = UPPER(#{jdbcNm})
                  AND  A.OWNER = UPPER(#{owner})
                  AND  B.JDBC_NM = UPPER(#{jdbcNm})
                  AND  B.OWNER = UPPER(#{owner})
           WHERE  A.NULLABLE != B.NULLABLE
          ) A
    ORDER BY A.TAB_NM,A.COL_ID

</select>


<!--*******************************************************************************************************************
**                                             (저장)
********************************************************************************************************************-->

<insert id="insertCmpTabInfo" parameterType="net.pmosoft.pony.dams.table.TabInfo">
    -- TabInfoDao.insertCmpTabInfo
    INSERT INTO TDACM00080
    SELECT A.*
    FROM   TDACM00081 A
           LEFT OUTER JOIN TDACM00080 B
           ON   A.JDBC_NM = B.JDBC_NM
           AND  A.OWNER = B.OWNER
           AND  A.TAB_NM = B.TAB_NM
           AND  A.COL_NM = B.COL_NM
           AND  A.COL_HNM = B.COL_HNM
           AND  A.DATA_TYPE_DESC = B.DATA_TYPE_DESC
    WHERE  B.COL_NM IS NULL
    ORDER BY A.TAB_NM,A.COL_ID
</insert>

<!--*******************************************************************************************************************
**                                             (삭제)
********************************************************************************************************************-->

<insert id="deleteTabInfo" parameterType="net.pmosoft.pony.dams.table.TabInfo">

    -- TabInfoDao.deleteTabInfo
    DELETE FROM TDACM00080
    WHERE  JDBC_NM = UPPER(#{jdbcNm})
    AND    UPPER(TAB_NM ) LIKE (UPPER(#{tabNm}   )||'%')

</insert>


<!--*******************************************************************************************************************
**                                             (조회)
********************************************************************************************************************-->

<select id="selectTabInfoList" parameterType="net.pmosoft.pony.dams.table.TabInfo" resultType="net.pmosoft.pony.dams.table.TabInfo">
    -- TabInfoDao.selectTabInfoList
    SELECT
           '등록' AS STS_NM
         , A.JDBC_NM
         , A.OWNER
         , A.TAB_NM
         , A.TAB_HNM
         , A.COL_ID
         , A.COL_NM
         , A.COL_HNM
         , A.DATA_TYPE_DESC
         , A.NULLABLE
         , A.PK
         , A.DATA_TYPE_NM
         , A.LEN
         , A.DECIMAL_CNT
         , A.TAB_ROWS
         , A.TAB_REG_DT
         , A.TAB_REG_DT2
         , A.TAB_UPD_DT
         , A.TAB_UPD_DT2
         , A.REG_DTM
         , A.REG_USR_ID
         , A.UPD_DTM
         , A.UPD_USR_ID
    FROM   TDACM00080 A
    <include refid="whereTDACM00080"/>
    ORDER BY ${orderBy} ${ascDesc},A.JDBC_NM,A.OWNER,A.TAB_NM,A.COL_ID
    LIMIT 5000
</select>

<sql id="whereTDACM00080">
    WHERE (#{jdbcNm} = '' OR UPPER(A.JDBC_NM  ) LIKE (UPPER(#{jdbcNm})))
    AND   (#{owner} = '' OR UPPER(A.OWNER  ) LIKE (UPPER(#{owner})))
    AND   (#{tabNm} = '' OR UPPER(A.TAB_NM ) LIKE (UPPER(#{tabNm})))
    AND   (#{tabHnm} = '' OR UPPER(A.TAB_HNM ) LIKE (UPPER(#{tabHnm})))
    AND   (
            (#{chkWhereTabs} = 1 AND UPPER(A.TAB_NM ) IN (${whereInTabs}))
             OR
            (#{chkWhereTabs} = 0)
          )
    AND   (
            (#{whereColTab} = 'COL'
                AND UPPER(A.COL_NM ) LIKE (UPPER(IFNULL(#{colNm},'')   )||'%')
                AND UPPER(IFNULL(A.COL_HNM,'')) LIKE (UPPER(IFNULL(#{colHnm},'')  )||'%')
            )
           OR
            (#{whereColTab} = 'TAB' AND UPPER(A.TAB_NM ) IN (
                SELECT DISTINCT UPPER(TAB_NM)
                FROM   TDACM00080
                WHERE  UPPER(COL_NM ) LIKE (UPPER(#{colNm}   )||'%')
                AND    UPPER(COL_HNM) LIKE (UPPER(#{colHnm}  )||'%')
                )
             )
           )
    AND    UPPER(A.JDBC_NM) IN (SELECT DISTINCT UPPER(JDBC_NM) FROM TDACM00010)
    AND    A.TAB_ROWS       = A.TAB_ROWS
    AND    A.TAB_REG_DT     >= (CASE WHEN #{tabRegDt} = '' THEN '19010101' ELSE #{tabRegDt} END)
    AND    A.TAB_UPD_DT     >= (CASE WHEN #{tabUpdDt} = '' THEN '19010101' ELSE #{tabRegDt} END)
    AND   (
           (LENGTH(#{colNm}) = 0)
            OR
           (LENGTH(#{colNm}) > 0 AND UPPER(A.TAB_NM ) IN (
                SELECT DISTINCT UPPER(TAB_NM)
                FROM   TDACM00080
                WHERE  UPPER(COL_NM ) LIKE (UPPER(#{colNm}   ))
                AND    UPPER(COL_HNM) LIKE (UPPER(#{colHnm}  ))
                )
            )
           )
</sql>

<select id="selectTabList" parameterType="net.pmosoft.pony.dams.table.TabInfo" resultType="net.pmosoft.pony.dams.table.TabInfo">

    -- TabInfoDao.selectTabList
    SELECT DISTINCT
           A.JDBC_NM
         , A.OWNER
         , A.TAB_NM
         , A.TAB_HNM
         , A.TAB_ROWS
         , A.TAB_REG_DT
         , A.TAB_REG_DT2
         , A.TAB_UPD_DT
         , A.TAB_UPD_DT2
    FROM   TDACM00080 A
    <include refid="whereTDACM00080"/>
</select>

<select id="selectColList" parameterType="net.pmosoft.pony.dams.table.TabInfo" resultType="net.pmosoft.pony.dams.table.TabInfo">

    -- TabInfoDao.selectColList
    SELECT COL_NM
         , COL_HNM
         , DATA_TYPE_DESC
         , JDBC_NM
         , TAB_NM
         , TAB_ROWS
    FROM   (
           SELECT
                  A.COL_NM
                , A.COL_HNM
                , A.DATA_TYPE_DESC
                , MAX(A.JDBC_NM)  AS JDBC_NM
                , MAX(A.TAB_NM)   AS TAB_NM
                , COUNT(*)        AS TAB_ROWS
           FROM   TDACM00080 A
           <include refid="whereTDACM00080"/>
           GROUP BY A.COL_NM, A.COL_HNM,A.DATA_TYPE_DESC
           )
    ORDER BY ${orderBy} ${ascDesc},COL_NM, COL_HNM, DATA_TYPE_DESC
</select>


<!--*******************************************************************************************************************
**                                             (수정)
********************************************************************************************************************-->
<update id="updateTabRows" parameterType="net.pmosoft.pony.dams.table.TabInfo">
	--	updateTabRows (mybatis에서 foreach사용시 sqlite의 jdbctype 처리를 못해주므로 단건으로 갱신한다 )
	UPDATE TDACM00080 
	SET    TAB_ROWS = ${tabRows}
	WHERE  JDBC_NM  = #{jdbcNm} 
	AND    OWNER    = #{owner}
	AND    TAB_NM   = #{tabNm}
	;
</update>

<!--*******************************************************************************************************************
**                                             (삭제)
********************************************************************************************************************-->
<delete id="deleteTabCol" parameterType="net.pmosoft.pony.dams.table.TabInfo">
    DELETE FROM TDACM00080
    WHERE  JDBC_NM = UPPER(#{jdbcNm})
    AND    OWNER   = UPPER(#{owner})
</delete>

<select id="selectTabColList" parameterType="java.util.LinkedHashMap" resultType="java.util.LinkedHashMap">

    -- TabInfoDao.selectTabColList(미사용)
    SELECT   A.JDBC_NM
            ,A.OWNER
            ,A.TAB_NM
            ,B.TAB_HNM
            ,A.COL_ID
            ,A.COL_NM
            ,A.COL_HNM
            ,A.DATA_TYPE_DESC
            ,A.NULLABLE
            ,A.PK
            ,A.DATA_TYPE_NM
            ,A.LEN
            ,A.DECIMAL_CNT
            ,TRIM(A.COL_DESC) AS COL_DESC
            ,DATE_FORMAT(A.REG_DTM,'%Y.%m.%d %H:%i:%S') AS REG_DTM
            ,A.REG_USR_ID
            ,DATE_FORMAT(A.UPD_DTM,'%Y.%m.%d %H:%i:%S') AS UPD_DTM
            ,A.UPD_USR_ID
    FROM    TDACM00080 A
            LEFT JOIN TDACM00070 B
            ON  A.JDBC_NM = B.JDBC_NM
            AND A.OWNER = B.OWNER
            AND A.TAB_NM = B.TAB_NM
    WHERE   1=1
    AND     A.JDBC_NM        LIKE CONCAT(CONCAT('%',#{DB_CONN_CD_NM}),'%')
    AND    UPPER(A.JDBC_NM) IN (SELECT DISTINCT UPPER(JDBC_NM) FROM TDACM00010)
    AND  (
          (#{tabChk} = 'false' AND #{searchKeyCombo} = 'JDBC_NM'        AND A.JDBC_NM    LIKE CONCAT(CONCAT('%',#{searchValue}),'%'))
           OR
          (#{tabChk} = 'false' AND #{searchKeyCombo} = 'OWNER'        AND A.OWNER        LIKE CONCAT(CONCAT('%',#{searchValue}),'%'))
           OR
          (#{tabChk} = 'false' AND #{searchKeyCombo} = 'TAB_NM'       AND A.TAB_NM       LIKE CONCAT(CONCAT('%',#{searchValue}),'%'))
           OR
          (#{tabChk} = 'false' AND #{searchKeyCombo} = 'TAB_HNM'      AND B.TAB_HNM      LIKE CONCAT(CONCAT('%',#{searchValue}),'%'))
           OR
          (#{tabChk} = 'false' AND #{searchKeyCombo} = 'COL_NM'       AND A.COL_NM       LIKE CONCAT(CONCAT('%',#{searchValue}),'%'))
           OR
          (#{tabChk} = 'false' AND #{searchKeyCombo} = 'COL_HNM'      AND A.COL_HNM      LIKE CONCAT(CONCAT('%',#{searchValue}),'%'))
           OR
          (#{tabChk} = 'false' AND #{searchKeyCombo} = 'DATA_TYPE_NM' AND A.DATA_TYPE_NM LIKE CONCAT(CONCAT('%',#{searchValue}),'%'))
           OR
          (#{tabChk} = 'true' AND #{searchKeyCombo} = 'COL_NM' AND A.TAB_NM IN (SELECT TAB_NM FROM TDACM00080 WHERE COL_NM LIKE CONCAT(CONCAT('%',#{searchValue}),'%')))
           OR
          (#{tabChk} = 'true' AND #{searchKeyCombo} = 'COL_HNM' AND A.TAB_NM IN (SELECT TAB_NM FROM TDACM00080 WHERE COL_HNM LIKE CONCAT(CONCAT('%',#{searchValue}),'%')))
         )
    ORDER BY A.JDBC_NM,OWNER,A.TAB_NM,A.COL_ID
</select>





</mapper>
